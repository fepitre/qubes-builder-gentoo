#!/bin/bash
# vim: set ts=4 sw=4 sts=4 et :

### prepare-chroot-builder : create a builder chroot instance of Gentoo

set -e
if [ "${VERBOSE:-0}" -ge 2 ] || [ "${DEBUG:-0}" -eq 1 ]; then
    set -x
fi

INSTALLDIR="$1"
DISTRO="$2"
FLAVOR="${3:-gnome}"

[ -z "$CACHEDIR" ] && CACHEDIR="/tmp"

SCRIPTSDIR=${GENTOO_PLUGIN_DIR}scripts
export INSTALLDIR SCRIPTSDIR

# shellcheck source=scripts/distribution.sh
. ${SCRIPTSDIR}/distribution.sh

if ! [ -d "${INSTALLDIR}/home/user" ]; then
    mkdir -p "$INSTALLDIR"

    "${GENTOO_PLUGIN_DIR}/prepare-chroot-base" "$INSTALLDIR" "$DISTRO" "$FLAVOR"

    [ -n "$SUDO_UID" ] && USER_OPTS="-u ${SUDO_UID}"
    [ -n "$USER_UID" ] && USER_OPTS="-u ${USER_UID}"
    if [ -n "$USER_GID" ]; then
        /usr/sbin/chroot "$INSTALLDIR" /usr/sbin/groupadd -g "$USER_GID" user
    elif [ -n "$SUDO_GID" ]; then
        /usr/sbin/chroot "$INSTALLDIR" /usr/sbin/groupadd -g "$SUDO_GID" user
    else
        /usr/sbin/chroot "$INSTALLDIR" /usr/sbin/groupadd user
    fi
    /usr/sbin/chroot "$INSTALLDIR" /bin/bash -c \
        "useradd -g user -G wheel $USER_OPTS -m user; su -c 'mkdir qubes-src' - user"

    cat > "${INSTALLDIR}/etc/sudoers.d/qubes-builder-user" <<EOF
%wheel ALL=(ALL) NOPASSWD: ALL
EOF

    cp -r /home/user/.gnupg "${INSTALLDIR}/home/user/"
    chrootCmd "${INSTALLDIR}" "chown -R user:user /home/user/.gnupg"
    chrootCmd "${INSTALLDIR}" "chmod 700 /home/user/.gnupg"
    cp "${SCRIPTSDIR}/../keys/10C8712330D9DCB045B592C2416E94671C79613B.asc" "${INSTALLDIR}/home/user/"
    chrootCmd "${INSTALLDIR}" "mkdir -p /etc/portage/gnupg"
    chrootCmd "${INSTALLDIR}" "GNUPGHOME=/etc/portage/gnupg gpg --import /home/user/10C8712330D9DCB045B592C2416E94671C79613B.asc"
    chrootCmd "${INSTALLDIR}" "echo '10C8712330D9DCB045B592C2416E94671C79613B:6:' | GNUPGHOME=/etc/portage/gnupg gpg --import-ownertrust"
    chrootCmd "${INSTALLDIR}" "GNUPGHOME=/etc/portage/gnupg gpg --check-trustdb"
    chrootCmd "${INSTALLDIR}" "chmod -R 775 /etc/portage/gnupg"

    if ! [ -r "${INSTALLDIR}"/tmp/qubes-packages-mirror-repo/.mnt ]; then
        mkdir -p "${BUILDER_REPO_DIR}" "${INSTALLDIR}"/tmp/qubes-packages-mirror-repo
        mount --bind "${BUILDER_REPO_DIR}" "${INSTALLDIR}/tmp/qubes-packages-mirror-repo"
    fi
fi

# Mount dev/proc/sys
prepareChroot "${INSTALLDIR}"

# Mount local cache as Portage binpkgs and distfiles
mountCache "${CACHEDIR}" "${INSTALLDIR}"

# Standard Gentoo flags
setupBaseFlags "${INSTALLDIR}" "${FLAVOR}"

LNB="$(sed -n "\|EGIT_REPO_URI|=" "${INSTALLDIR}"/var/db/repos/gentoo/sys-apps/portage/portage-9999.ebuild)"
sed -i "$LNB,$((LNB+1))d" "${INSTALLDIR}"/var/db/repos/gentoo/sys-apps/portage/portage-9999.ebuild
sed -i "$LNB i EGIT_REPO_URI=\"https://github.com/RinCat/portage.git\"\nEGIT_BRANCH=\"gpkg\"" "${INSTALLDIR}"/var/db/repos/gentoo/sys-apps/portage/portage-9999.ebuild

chrootCmd "${INSTALLDIR}" "emerge ${EMERGE_OPTS} --digest =sys-apps/portage-9999"

if ! grep BINPKG_FORMAT "${INSTALLDIR}/etc/portage/make.conf"; then
    cat >> "${INSTALLDIR}/etc/portage/make.conf" << EOF
#FEATURES="\$FEATURES binpkg-signing"
FEATURES="\$FEATURES binpkg-request-signature"
#BINPKG_GPG_SIGNING_COMMAND="flock /run/lock/binpkg-gpg.lock sudo -u user -- /usr/bin/gpg --detach-sign --armor --batch --yes --no-tty --digest-algo SHA256 --local-user 10C8712330D9DCB045B592C2416E94671C79613B"
BINPKG_GPG_VERIFY_COMMAND="/usr/bin/sudo -u nobody -- /usr/bin/gpg --homedir=/etc/portage/gnupg --no-auto-check-trustdb --verify --batch --no-tty --status-fd 1 \"\\${SIGN_FILE}\" -"
BINPKG_FORMAT="gpkg"

FEATURES="\$FEATURES getbinpkg"
PORTAGE_BINHOST=https://gentoo.notset.fr/repo/gpkg/
EOF
fi

chrootCmd "${INSTALLDIR}" "mkdir -p /run/lock"

# Qubes Gentoo flags
setupQubesFlags "${INSTALLDIR}" "${FLAVOR}"

# Select profile
setPortageProfile "${INSTALLDIR}" "${FLAVOR}"

# Ensure chroot is up to date
updateChroot "${INSTALLDIR}"

# https://bugs.gentoo.org/734794
chrootCmd "${INSTALLDIR}" "emerge ${EMERGE_OPTS} x11-libs/pixman"

# Use provided pandoc-bin for local builds and continuous integration
# New issue rised while reusing binpkgs provided for the CI
# with pandoc dependencies: https://bugs.gentoo.org/738802
# Up to this issue, it allows to speed up builds
# because of huge number of dependencies for pandoc.
# WIP: find a proper way enabling/disabling this
echo "app-emulation/qubes-* pandoc-bin" >> "${INSTALLDIR}"/etc/portage/package.use/qubes
echo "app-text/pandoc-bin ~amd64" >> "${INSTALLDIR}"/etc/portage/package.accept_keywords/standard
